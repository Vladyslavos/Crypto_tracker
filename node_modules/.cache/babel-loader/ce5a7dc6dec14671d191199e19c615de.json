{"ast":null,"code":"var _s = $RefreshSig$();\nimport useCoins from \"./list\";\nexport default function usePagination() {\n  _s();\n  const {\n    filteredCoins\n  } = useCoins();\n  return {\n    currentCoin,\n    coinsPerPage,\n    paginate,\n    currentPage,\n    setCurrentPage,\n    firstCoinIndex,\n    lastCoinIndex,\n    nextPage,\n    prevPage\n  };\n}\n\n/*\r\n const [currentPage, setCurrentPage] = React.useState<number>(1);\r\n  const [coinsPerPage, setCoinsPerPage] = React.useState<number>(10);\r\n  const lastCoinIndex = currentPage * coinsPerPage;\r\n  const firstCoinIndex = lastCoinIndex - coinsPerPage;\r\n  const currentCoin = filteredCoins.slice(firstCoinIndex, lastCoinIndex);\r\n\r\n  const paginate = (pageNumber: number) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  const nextPage = () => setCurrentPage((prev) => prev + 1);\r\n  const prevPage = () => setCurrentPage((prev) => prev - 1);\r\n  */\n_s(usePagination, \"ynOn8LBI5ebLrq5EiNSjBSyIRmE=\", false, function () {\n  return [useCoins];\n});","map":{"version":3,"names":["useCoins","usePagination","filteredCoins","currentCoin","coinsPerPage","paginate","currentPage","setCurrentPage","firstCoinIndex","lastCoinIndex","nextPage","prevPage"],"sources":["C:/Users/Vladyslav/crypto-app/src/hooks/pagination.tsx"],"sourcesContent":["import React from \"react\";\r\nimport useCoins from \"./list\";\r\n\r\nexport default function usePagination() {\r\n  const { filteredCoins } = useCoins();\r\n\r\n  return {\r\n    currentCoin,\r\n    coinsPerPage,\r\n    paginate,\r\n    currentPage,\r\n    setCurrentPage,\r\n    firstCoinIndex,\r\n    lastCoinIndex,\r\n    nextPage,\r\n    prevPage,\r\n  };\r\n}\r\n\r\n/*\r\n const [currentPage, setCurrentPage] = React.useState<number>(1);\r\n  const [coinsPerPage, setCoinsPerPage] = React.useState<number>(10);\r\n  const lastCoinIndex = currentPage * coinsPerPage;\r\n  const firstCoinIndex = lastCoinIndex - coinsPerPage;\r\n  const currentCoin = filteredCoins.slice(firstCoinIndex, lastCoinIndex);\r\n\r\n  const paginate = (pageNumber: number) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  const nextPage = () => setCurrentPage((prev) => prev + 1);\r\n  const prevPage = () => setCurrentPage((prev) => prev - 1);\r\n  */\r\n"],"mappings":";AACA,OAAOA,QAAQ,MAAM,QAAQ;AAE7B,eAAe,SAASC,aAAa,GAAG;EAAA;EACtC,MAAM;IAAEC;EAAc,CAAC,GAAGF,QAAQ,EAAE;EAEpC,OAAO;IACLG,WAAW;IACXC,YAAY;IACZC,QAAQ;IACRC,WAAW;IACXC,cAAc;IACdC,cAAc;IACdC,aAAa;IACbC,QAAQ;IACRC;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,GAhBwBV,aAAa;EAAA,QACTD,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}