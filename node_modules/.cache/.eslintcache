[{"C:\\Users\\Vladyslav\\crypto-app\\src\\index.tsx":"1","C:\\Users\\Vladyslav\\crypto-app\\src\\App.tsx":"2","C:\\Users\\Vladyslav\\crypto-app\\src\\components\\navbar\\Navbar.tsx":"3","C:\\Users\\Vladyslav\\crypto-app\\src\\components\\Coins\\Coins.tsx":"4","C:\\Users\\Vladyslav\\crypto-app\\src\\components\\Navbar\\Navbar.tsx":"5","C:\\Users\\Vladyslav\\crypto-app\\src\\components\\Coin\\Coin.tsx":"6","C:\\Users\\Vladyslav\\crypto-app\\src\\components\\CoinItem\\CoinItem.tsx":"7","C:\\Users\\Vladyslav\\crypto-app\\src\\hooks\\list.tsx":"8","C:\\Users\\Vladyslav\\crypto-app\\src\\hooks\\pagination.tsx":"9","C:\\Users\\Vladyslav\\crypto-app\\src\\components\\ToTopBtn\\ToTopBtn.tsx":"10","C:\\Users\\Vladyslav\\crypto-app\\src\\animation\\textAnimation.tsx":"11","C:\\Users\\Vladyslav\\crypto-app\\src\\components\\Main\\CryptoTracker.tsx":"12"},{"size":314,"mtime":1670159635613,"results":"13","hashOfConfig":"14"},{"size":206,"mtime":1671813392074,"results":"15","hashOfConfig":"14"},{"size":286,"mtime":1666442333876,"results":"16","hashOfConfig":"14"},{"size":2039,"mtime":1671631125483,"results":"17","hashOfConfig":"14"},{"size":2005,"mtime":1671795743502,"results":"18","hashOfConfig":"14"},{"size":5713,"mtime":1671718703542,"results":"19","hashOfConfig":"14"},{"size":1199,"mtime":1671718703547,"results":"20","hashOfConfig":"14"},{"size":1138,"mtime":1670080958680,"results":"21","hashOfConfig":"14"},{"size":1412,"mtime":1668359035186,"results":"22","hashOfConfig":"14"},{"size":1105,"mtime":1671645680917,"results":"23","hashOfConfig":"14"},{"size":198,"mtime":1669573383246,"results":"24","hashOfConfig":"14"},{"size":777,"mtime":1671813352520,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"nq8p2",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Vladyslav\\crypto-app\\src\\index.tsx",[],[],[],"C:\\Users\\Vladyslav\\crypto-app\\src\\App.tsx",[],[],"C:\\Users\\Vladyslav\\crypto-app\\src\\components\\navbar\\Navbar.tsx",[],[],"C:\\Users\\Vladyslav\\crypto-app\\src\\components\\Coins\\Coins.tsx",["67"],[],"import React from \"react\";\r\nimport { ICoins } from \"../../models/models\";\r\nimport CoinItem from \"../CoinItem/CoinItem\";\r\nimport \"../Coins/Coins.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useCoins from \"../../hooks/list\";\r\nimport ToTopBtn from \"../ToTopBtn/ToTopBtn\";\r\nimport { textAnimation } from \"../../animation/textAnimation\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Audio } from \"react-loader-spinner\";\r\n\r\ninterface IPropsCoins {\r\n  coins: ICoins[];\r\n}\r\n\r\nexport default function Coins(props: IPropsCoins) {\r\n  const { loading } = useCoins();\r\n  const { coins } = props;\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <div className=\"loader\">\r\n          <Audio height=\"300\" width=\"300\" color=\"#a972cb\" ariaLabel=\"loading\" />\r\n        </div>\r\n      )}\r\n      <div>\r\n        <motion.div\r\n          className=\"coins-wrapper\"\r\n          initial=\"hidden\"\r\n          whileInView=\"visible\"\r\n          custom={2}\r\n          variants={textAnimation}\r\n          viewport={{ once: true }}\r\n        >\r\n          <div className=\"description\">\r\n            <h3>#Logo</h3>\r\n            <h3>Name</h3>\r\n            <h3>Current Price</h3>\r\n            <h3 className=\"coin-volume\">Coin Volume</h3>\r\n            <h3 className=\"hide-mobile\">Price Change</h3>\r\n            <h3 className=\"hide-mobile\">Market Cap</h3>\r\n          </div>\r\n        </motion.div>\r\n        <motion.div\r\n          className=\"coins-wrapper\"\r\n          initial=\"hidden\"\r\n          whileInView=\"visible\"\r\n          custom={3}\r\n          variants={textAnimation}\r\n          viewport={{ once: true }}\r\n        >\r\n          {coins.map((coins) => {\r\n            return (\r\n              <React.Fragment key={coins.id}>\r\n                <div className=\"coins-data\">\r\n                  <Link to={`/coin/${coins.id}`}>\r\n                    <CoinItem coins={coins} />\r\n                  </Link>\r\n                </div>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </motion.div>\r\n      </div>\r\n      <ToTopBtn />\r\n    </>\r\n  );\r\n}\r\n{\r\n}\r\n","C:\\Users\\Vladyslav\\crypto-app\\src\\components\\Navbar\\Navbar.tsx",["68"],[],"import React from \"react\";\r\nimport \"./Navbar.css\";\r\nimport ada from \"../../assets/icons/ada_cardano_icon.png\";\r\nimport btc from \"../../assets/icons/bitoin_btc_coin_crypto_icon.png\";\r\nimport tron from \"../../assets/icons/coin_trn_tron_icon.png\";\r\nimport ltc from \"../../assets/icons/LTC.png\";\r\nimport dash from \"../../assets/icons/dash.png\";\r\nimport { motion } from \"framer-motion\";\r\nimport { textAnimation } from \"../../animation/textAnimation\";\r\n\r\ninterface INavbarProps {\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  value: string;\r\n}\r\n\r\nexport default function Navbar(props: INavbarProps) {\r\n  const { handleChange, value } = props;\r\n  return (\r\n    <motion.div\r\n      className=\"navbar\"\r\n      initial=\"hidden\"\r\n      whileInView=\"visible\"\r\n      custom={1}\r\n      variants={textAnimation}\r\n      viewport={{ once: true }}\r\n    >\r\n      <div className=\"search-box\">\r\n        <div className=\"container-2\">\r\n          <span className=\"icon\">\r\n            <i className=\"fa fa-search\"></i>\r\n          </span>\r\n          <input\r\n            type=\"search\"\r\n            id=\"search\"\r\n            onChange={handleChange}\r\n            value={value}\r\n            placeholder={\"Search coins...\"}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"icon-coins\">\r\n        <img src={ada} alt={\"crypto-coin\"} className={\"indiv-img\"} />\r\n        <img src={ltc} alt={\"crypto-coin\"} className={\"indiv-img\"} />\r\n        <img src={tron} alt={\"crypto-coin\"} className={\"indiv-img\"} />\r\n        <img src={btc} alt={\"crypto-coin\"} className={\"indiv-img\"} />\r\n        <img src={dash} alt={\"crypto-coin\"} className={\"indiv-img\"} />\r\n      </div>\r\n      <div className=\"api-attribution hide-attribution\">\r\n        <p>Data from CoinGecko</p>\r\n        <p>\r\n          Created by\r\n          <span>\r\n            <a href=\"https://github.com/Vladyslavos\" target={\"_blank\"}>\r\n              Vladyslavos\r\n            </a>\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n","C:\\Users\\Vladyslav\\crypto-app\\src\\components\\Coin\\Coin.tsx",["69"],[],"import React from \"react\";\r\nimport \"./Coin.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { ICoin } from \"../../models/models\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DOMPurify from \"isomorphic-dompurify\";\r\nimport BackToTopBtn from \"../ToTopBtn/ToTopBtn\";\r\nimport { motion } from \"framer-motion\";\r\nimport { textAnimation } from \"../../animation/textAnimation\";\r\n\r\nexport default function Coin() {\r\n  const params = useParams();\r\n  const [coin, setCoin] = React.useState<ICoin>({});\r\n  const url: string = `https://api.coingecko.com/api/v3/coins/${params.coinId}`;\r\n\r\n  React.useEffect(() => {\r\n    fetchCoin();\r\n  }, []);\r\n  const fetchCoin = async function () {\r\n    try {\r\n      const response = await axios.get<ICoin>(url);\r\n      if (response) {\r\n        setCoin(response.data);\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to={\"/\"}>\r\n        <button className=\"back\">Back</button>\r\n      </Link>\r\n      <motion.div\r\n        className=\"coin-container\"\r\n        initial=\"hidden\"\r\n        whileInView=\"visible\"\r\n        custom={1}\r\n        variants={textAnimation}\r\n        viewport={{ once: true }}\r\n      >\r\n        <div className=\"wrapper-name\">\r\n          <h1>{coin.name?.toLocaleString()}</h1>\r\n        </div>\r\n        <motion.div\r\n          className=\"wrapper\"\r\n          initial=\"hidden\"\r\n          whileInView=\"visible\"\r\n          custom={2}\r\n          variants={textAnimation}\r\n          viewport={{ once: true }}\r\n        >\r\n          <div className=\"rank\">\r\n            <span className=\"rank-info\">Rank#{coin.market_cap_rank}</span>\r\n          </div>\r\n          <div className=\"info\">\r\n            <div className=\"coin-heading\">\r\n              {coin.image ? (\r\n                <img src={coin.image.small} alt={`${params.coinId}-symbol`} />\r\n              ) : null}\r\n              <p>{coin.name}</p>\r\n              <p>{coin.symbol?.toUpperCase()}/USD</p>\r\n            </div>\r\n            <div className=\"coin-price\">\r\n              {coin.market_data?.current_price ? (\r\n                <h2>{coin.market_data.current_price.usd.toLocaleString()}$</h2>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n        <motion.div\r\n          className=\"wrapper\"\r\n          initial=\"hidden\"\r\n          whileInView=\"visible\"\r\n          custom={3}\r\n          variants={textAnimation}\r\n          viewport={{ once: true }}\r\n        >\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>1h</th>\r\n                <th>24h</th>\r\n                <th>7d</th>\r\n                <th className=\"fourteen-days\">14d</th>\r\n                <th className=\"thirty-days\">30d</th>\r\n                <th className=\"hide-mobile\">1yr</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  {coin.market_data?.price_change_percentage_1h_in_currency.usd}\r\n                </td>\r\n                <td>\r\n                  {\r\n                    coin.market_data?.price_change_percentage_24h_in_currency\r\n                      .usd\r\n                  }\r\n                </td>\r\n                <td>\r\n                  {coin.market_data?.price_change_percentage_7d_in_currency.usd}\r\n                </td>\r\n                <td className=\"fourteen-days\">\r\n                  {\r\n                    coin.market_data?.price_change_percentage_14d_in_currency\r\n                      .usd\r\n                  }\r\n                </td>\r\n                <td className=\"thirty-days\">\r\n                  {\r\n                    coin.market_data?.price_change_percentage_30d_in_currency\r\n                      .usd\r\n                  }\r\n                </td>\r\n                <td className=\"hide-mobile\">\r\n                  {coin.market_data?.price_change_percentage_1y_in_currency.usd}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </motion.div>\r\n        <motion.div\r\n          className=\"wrapper\"\r\n          initial=\"hidden\"\r\n          whileInView=\"visible\"\r\n          custom={4}\r\n          variants={textAnimation}\r\n          viewport={{ once: true }}\r\n        >\r\n          <div className=\"stats\">\r\n            <div className=\"left\">\r\n              <div className=\"row\">\r\n                <h4>Lowest value in 24h:</h4>\r\n                <span>{coin.market_data?.low_24h.usd}$</span>\r\n              </div>\r\n              <div className=\"row\">\r\n                <h4>Highest value in 24h:</h4>\r\n                <span>{coin.market_data?.high_24h.usd}$</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"right\">\r\n              <div className=\"row\">\r\n                <h4>Market Capitalization:</h4>\r\n                <span>{coin.market_data?.market_cap.usd}$</span>\r\n              </div>\r\n              <div className=\"row\">\r\n                <h4>Circulating Supply:</h4>\r\n                <span>{coin.market_data?.circulating_supply}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n        <motion.div\r\n          className=\"wrapper\"\r\n          initial=\"hidden\"\r\n          whileInView=\"visible\"\r\n          custom={4}\r\n          variants={textAnimation}\r\n          viewport={{ once: true }}\r\n        >\r\n          <div className=\"about\">\r\n            <h2>About {coin.name}</h2>\r\n            <p\r\n              dangerouslySetInnerHTML={{\r\n                __html: DOMPurify.sanitize(\r\n                  coin.description ? coin.description.en : \"\"\r\n                ),\r\n              }}\r\n            ></p>\r\n          </div>\r\n        </motion.div>\r\n      </motion.div>\r\n      <BackToTopBtn />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Vladyslav\\crypto-app\\src\\components\\CoinItem\\CoinItem.tsx",[],[],"C:\\Users\\Vladyslav\\crypto-app\\src\\hooks\\list.tsx",["70"],[],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { ICoins } from \"../models/models\";\r\n\r\nexport default function useCoins() {\r\n  const url: string = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=600&page=1&sparkline=false`;\r\n  const [coins, setCoins] = React.useState<ICoins[]>([]);\r\n  const [value, setValue] = React.useState<string>(\"\");\r\n  const [loading, setLoading] = React.useState<any>(false);\r\n\r\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n  const filteredCoins = coins.filter((coin) =>\r\n    coin.name.toLowerCase().includes(value.toLowerCase())\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    fetchApi();\r\n  }, []);\r\n\r\n  async function fetchApi() {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get<ICoins[]>(url);\r\n      if (response) {\r\n        setCoins(response.data);\r\n        setLoading(false);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error >>>\", e);\r\n    }\r\n  }\r\n\r\n  return {\r\n    coins,\r\n    handleChange,\r\n    value,\r\n    filteredCoins,\r\n    loading,\r\n  };\r\n}\r\n","C:\\Users\\Vladyslav\\crypto-app\\src\\hooks\\pagination.tsx",["71"],[],"C:\\Users\\Vladyslav\\crypto-app\\src\\components\\ToTopBtn\\ToTopBtn.tsx",[],[],"C:\\Users\\Vladyslav\\crypto-app\\src\\animation\\textAnimation.tsx",[],[],"C:\\Users\\Vladyslav\\crypto-app\\src\\components\\Main\\CryptoTracker.tsx",[],[],{"ruleId":"72","severity":1,"message":"73","line":69,"column":1,"nodeType":"74","messageId":"75","endLine":70,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":53,"column":13,"nodeType":"78","messageId":"79","endLine":53,"endColumn":72,"fix":"80"},{"ruleId":"81","severity":1,"message":"82","line":19,"column":6,"nodeType":"83","endLine":19,"endColumn":8,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":20,"column":6,"nodeType":"83","endLine":20,"endColumn":8,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":7,"column":24,"nodeType":"89","messageId":"90","endLine":7,"endColumn":39},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"91","text":"92"},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'fetchCoin'. Either include it or remove the dependency array.","ArrayExpression",["93"],"React Hook React.useEffect has a missing dependency: 'fetchApi'. Either include it or remove the dependency array.",["94"],"@typescript-eslint/no-unused-vars","'setCoinsPerPage' is assigned a value but never used.","Identifier","unusedVar",[1882,1882]," rel=\"noreferrer\"",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [fetchCoin]",{"range":"99","text":"100"},"Update the dependencies array to be: [fetchApi]",{"range":"101","text":"102"},[670,672],"[fetchCoin]",[744,746],"[fetchApi]"]